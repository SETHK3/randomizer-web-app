"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/utils/api.ts":
/*!**************************!*\
  !*** ./app/utils/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addWord: function() { return /* binding */ addWord; },\n/* harmony export */   getRandomStudent: function() { return /* binding */ getRandomStudent; },\n/* harmony export */   getStudents: function() { return /* binding */ getStudents; }\n/* harmony export */ });\n// Frontend-only implementation using localStorage\n// Initial words data - will only be used if localStorage isn't available\nconst initialWords = [];\n// Helper function to get words from localStorage or initialize if not present\nfunction getWordsFromStorage() {\n    if (false) {}\n    // Try to get existing words from localStorage\n    const storedWords = localStorage.getItem(\"wordBank\");\n    if (storedWords) {\n        try {\n            return JSON.parse(storedWords);\n        } catch (error) {\n            console.error(\"Error parsing stored words:\", error);\n        }\n    }\n    // Initialize with empty array if no valid data found\n    localStorage.setItem(\"wordBank\", JSON.stringify(initialWords));\n    return initialWords;\n}\n// Helper function to save words to localStorage\nfunction saveWordsToStorage(words) {\n    if (true) {\n        localStorage.setItem(\"wordBank\", JSON.stringify(words));\n    }\n}\n// Helper function to capitalize each word in a string\nfunction capitalizeWords(str) {\n    return str.split(\" \").map((word)=>word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(\" \");\n}\n// Get all words\nasync function getStudents() {\n    try {\n        const words = getWordsFromStorage();\n        return {\n            results: words\n        };\n    } catch (error) {\n        console.error(\"Error fetching words:\", error);\n        return {\n            results: initialWords\n        };\n    }\n}\n// Get a random word\nasync function getRandomStudent() {\n    try {\n        const words = getWordsFromStorage();\n        if (words.length === 0) {\n            return {\n                results: []\n            };\n        }\n        const randomIndex = Math.floor(Math.random() * words.length);\n        const randomWord = words[randomIndex];\n        return {\n            results: [\n                randomWord\n            ]\n        };\n    } catch (error) {\n        console.error(\"Error fetching random word:\", error);\n        return {\n            results: []\n        };\n    }\n}\n// Add a new word\nasync function addWord(name) {\n    try {\n        const words = getWordsFromStorage();\n        // Capitalize the input before saving\n        const capitalizedName = capitalizeWords(name);\n        // Create a new word with a unique ID\n        const newId = words.length > 0 ? Math.max(...words.map((w)=>w.id)) + 1 : 1;\n        const newWord = {\n            id: newId,\n            name: capitalizedName\n        };\n        // Add to list and save\n        words.push(newWord);\n        saveWordsToStorage(words);\n        return newWord;\n    } catch (error) {\n        console.error(\"Error adding word:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0RBQWtEO0FBWWxELHlFQUF5RTtBQUN6RSxNQUFNQSxlQUF1QixFQUFFO0FBRS9CLDhFQUE4RTtBQUM5RSxTQUFTQztJQUNQLElBQUksS0FBNkIsRUFBRSxFQUVsQztJQUVELDhDQUE4QztJQUM5QyxNQUFNQyxjQUFjQyxhQUFhQyxPQUFPLENBQUM7SUFDekMsSUFBSUYsYUFBYTtRQUNmLElBQUk7WUFDRixPQUFPRyxLQUFLQyxLQUFLLENBQUNKO1FBQ3BCLEVBQUUsT0FBT0ssT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtRQUMvQztJQUNGO0lBRUEscURBQXFEO0lBQ3JESixhQUFhTSxPQUFPLENBQUMsWUFBWUosS0FBS0ssU0FBUyxDQUFDVjtJQUNoRCxPQUFPQTtBQUNUO0FBRUEsZ0RBQWdEO0FBQ2hELFNBQVNXLG1CQUFtQkMsS0FBYTtJQUN2QyxJQUFJLElBQTZCLEVBQUU7UUFDakNULGFBQWFNLE9BQU8sQ0FBQyxZQUFZSixLQUFLSyxTQUFTLENBQUNFO0lBQ2xEO0FBQ0Y7QUFFQSxzREFBc0Q7QUFDdEQsU0FBU0MsZ0JBQWdCQyxHQUFXO0lBQ2xDLE9BQU9BLElBQ0pDLEtBQUssQ0FBQyxLQUNOQyxHQUFHLENBQUMsQ0FBQ0MsT0FBU0EsS0FBS0MsTUFBTSxDQUFDLEdBQUdDLFdBQVcsS0FBS0YsS0FBS0csS0FBSyxDQUFDLEdBQUdDLFdBQVcsSUFDdEVDLElBQUksQ0FBQztBQUNWO0FBRUEsZ0JBQWdCO0FBQ1QsZUFBZUM7SUFDcEIsSUFBSTtRQUNGLE1BQU1YLFFBQVFYO1FBQ2QsT0FBTztZQUFFdUIsU0FBU1o7UUFBTTtJQUMxQixFQUFFLE9BQU9MLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHlCQUF5QkE7UUFDdkMsT0FBTztZQUFFaUIsU0FBU3hCO1FBQWE7SUFDakM7QUFDRjtBQUVBLG9CQUFvQjtBQUNiLGVBQWV5QjtJQUNwQixJQUFJO1FBQ0YsTUFBTWIsUUFBUVg7UUFDZCxJQUFJVyxNQUFNYyxNQUFNLEtBQUssR0FBRztZQUN0QixPQUFPO2dCQUFFRixTQUFTLEVBQUU7WUFBQztRQUN2QjtRQUVBLE1BQU1HLGNBQWNDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLbEIsTUFBTWMsTUFBTTtRQUMzRCxNQUFNSyxhQUFhbkIsS0FBSyxDQUFDZSxZQUFZO1FBQ3JDLE9BQU87WUFBRUgsU0FBUztnQkFBQ087YUFBVztRQUFDO0lBQ2pDLEVBQUUsT0FBT3hCLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLCtCQUErQkE7UUFDN0MsT0FBTztZQUFFaUIsU0FBUyxFQUFFO1FBQUM7SUFDdkI7QUFDRjtBQUVBLGlCQUFpQjtBQUNWLGVBQWVRLFFBQVFDLElBQVk7SUFDeEMsSUFBSTtRQUNGLE1BQU1yQixRQUFRWDtRQUVkLHFDQUFxQztRQUNyQyxNQUFNaUMsa0JBQWtCckIsZ0JBQWdCb0I7UUFFeEMscUNBQXFDO1FBQ3JDLE1BQU1FLFFBQ0p2QixNQUFNYyxNQUFNLEdBQUcsSUFBSUUsS0FBS1EsR0FBRyxJQUFJeEIsTUFBTUksR0FBRyxDQUFDLENBQUNxQixJQUFNQSxFQUFFQyxFQUFFLEtBQUssSUFBSTtRQUUvRCxNQUFNQyxVQUFVO1lBQUVELElBQUlIO1lBQU9GLE1BQU1DO1FBQWdCO1FBRW5ELHVCQUF1QjtRQUN2QnRCLE1BQU00QixJQUFJLENBQUNEO1FBQ1g1QixtQkFBbUJDO1FBRW5CLE9BQU8yQjtJQUNULEVBQUUsT0FBT2hDLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHNCQUFzQkE7UUFDcEMsTUFBTUE7SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC91dGlscy9hcGkudHM/NTE5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBGcm9udGVuZC1vbmx5IGltcGxlbWVudGF0aW9uIHVzaW5nIGxvY2FsU3RvcmFnZVxuXG5leHBvcnQgaW50ZXJmYWNlIFdvcmQge1xuICBpZDogbnVtYmVyO1xuICBuYW1lOiBzdHJpbmc7XG4gIHNlbGVjdGVkPzogYm9vbGVhbjtcbn1cblxuaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQ+IHtcbiAgcmVzdWx0czogVFtdO1xufVxuXG4vLyBJbml0aWFsIHdvcmRzIGRhdGEgLSB3aWxsIG9ubHkgYmUgdXNlZCBpZiBsb2NhbFN0b3JhZ2UgaXNuJ3QgYXZhaWxhYmxlXG5jb25zdCBpbml0aWFsV29yZHM6IFdvcmRbXSA9IFtdO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IHdvcmRzIGZyb20gbG9jYWxTdG9yYWdlIG9yIGluaXRpYWxpemUgaWYgbm90IHByZXNlbnRcbmZ1bmN0aW9uIGdldFdvcmRzRnJvbVN0b3JhZ2UoKTogV29yZFtdIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4gaW5pdGlhbFdvcmRzOyAvLyBSZXR1cm4gaW5pdGlhbCBkYXRhIGR1cmluZyBTU1JcbiAgfVxuXG4gIC8vIFRyeSB0byBnZXQgZXhpc3Rpbmcgd29yZHMgZnJvbSBsb2NhbFN0b3JhZ2VcbiAgY29uc3Qgc3RvcmVkV29yZHMgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIndvcmRCYW5rXCIpO1xuICBpZiAoc3RvcmVkV29yZHMpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RvcmVkV29yZHMpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgcGFyc2luZyBzdG9yZWQgd29yZHM6XCIsIGVycm9yKTtcbiAgICB9XG4gIH1cblxuICAvLyBJbml0aWFsaXplIHdpdGggZW1wdHkgYXJyYXkgaWYgbm8gdmFsaWQgZGF0YSBmb3VuZFxuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIndvcmRCYW5rXCIsIEpTT04uc3RyaW5naWZ5KGluaXRpYWxXb3JkcykpO1xuICByZXR1cm4gaW5pdGlhbFdvcmRzO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gc2F2ZSB3b3JkcyB0byBsb2NhbFN0b3JhZ2VcbmZ1bmN0aW9uIHNhdmVXb3Jkc1RvU3RvcmFnZSh3b3JkczogV29yZFtdKTogdm9pZCB7XG4gIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ3b3JkQmFua1wiLCBKU09OLnN0cmluZ2lmeSh3b3JkcykpO1xuICB9XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBjYXBpdGFsaXplIGVhY2ggd29yZCBpbiBhIHN0cmluZ1xuZnVuY3Rpb24gY2FwaXRhbGl6ZVdvcmRzKHN0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIHN0clxuICAgIC5zcGxpdChcIiBcIilcbiAgICAubWFwKCh3b3JkKSA9PiB3b3JkLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgd29yZC5zbGljZSgxKS50b0xvd2VyQ2FzZSgpKVxuICAgIC5qb2luKFwiIFwiKTtcbn1cblxuLy8gR2V0IGFsbCB3b3Jkc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFN0dWRlbnRzKCk6IFByb21pc2U8QXBpUmVzcG9uc2U8V29yZD4+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB3b3JkcyA9IGdldFdvcmRzRnJvbVN0b3JhZ2UoKTtcbiAgICByZXR1cm4geyByZXN1bHRzOiB3b3JkcyB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyB3b3JkczpcIiwgZXJyb3IpO1xuICAgIHJldHVybiB7IHJlc3VsdHM6IGluaXRpYWxXb3JkcyB9O1xuICB9XG59XG5cbi8vIEdldCBhIHJhbmRvbSB3b3JkXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UmFuZG9tU3R1ZGVudCgpOiBQcm9taXNlPEFwaVJlc3BvbnNlPFdvcmQ+PiB7XG4gIHRyeSB7XG4gICAgY29uc3Qgd29yZHMgPSBnZXRXb3Jkc0Zyb21TdG9yYWdlKCk7XG4gICAgaWYgKHdvcmRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHsgcmVzdWx0czogW10gfTtcbiAgICB9XG5cbiAgICBjb25zdCByYW5kb21JbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHdvcmRzLmxlbmd0aCk7XG4gICAgY29uc3QgcmFuZG9tV29yZCA9IHdvcmRzW3JhbmRvbUluZGV4XTtcbiAgICByZXR1cm4geyByZXN1bHRzOiBbcmFuZG9tV29yZF0gfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgcmFuZG9tIHdvcmQ6XCIsIGVycm9yKTtcbiAgICByZXR1cm4geyByZXN1bHRzOiBbXSB9O1xuICB9XG59XG5cbi8vIEFkZCBhIG5ldyB3b3JkXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYWRkV29yZChuYW1lOiBzdHJpbmcpOiBQcm9taXNlPFdvcmQ+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB3b3JkcyA9IGdldFdvcmRzRnJvbVN0b3JhZ2UoKTtcblxuICAgIC8vIENhcGl0YWxpemUgdGhlIGlucHV0IGJlZm9yZSBzYXZpbmdcbiAgICBjb25zdCBjYXBpdGFsaXplZE5hbWUgPSBjYXBpdGFsaXplV29yZHMobmFtZSk7XG5cbiAgICAvLyBDcmVhdGUgYSBuZXcgd29yZCB3aXRoIGEgdW5pcXVlIElEXG4gICAgY29uc3QgbmV3SWQgPVxuICAgICAgd29yZHMubGVuZ3RoID4gMCA/IE1hdGgubWF4KC4uLndvcmRzLm1hcCgodykgPT4gdy5pZCkpICsgMSA6IDE7XG5cbiAgICBjb25zdCBuZXdXb3JkID0geyBpZDogbmV3SWQsIG5hbWU6IGNhcGl0YWxpemVkTmFtZSB9O1xuXG4gICAgLy8gQWRkIHRvIGxpc3QgYW5kIHNhdmVcbiAgICB3b3Jkcy5wdXNoKG5ld1dvcmQpO1xuICAgIHNhdmVXb3Jkc1RvU3RvcmFnZSh3b3Jkcyk7XG5cbiAgICByZXR1cm4gbmV3V29yZDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgYWRkaW5nIHdvcmQ6XCIsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImluaXRpYWxXb3JkcyIsImdldFdvcmRzRnJvbVN0b3JhZ2UiLCJzdG9yZWRXb3JkcyIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJlcnJvciIsImNvbnNvbGUiLCJzZXRJdGVtIiwic3RyaW5naWZ5Iiwic2F2ZVdvcmRzVG9TdG9yYWdlIiwid29yZHMiLCJjYXBpdGFsaXplV29yZHMiLCJzdHIiLCJzcGxpdCIsIm1hcCIsIndvcmQiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwidG9Mb3dlckNhc2UiLCJqb2luIiwiZ2V0U3R1ZGVudHMiLCJyZXN1bHRzIiwiZ2V0UmFuZG9tU3R1ZGVudCIsImxlbmd0aCIsInJhbmRvbUluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwicmFuZG9tV29yZCIsImFkZFdvcmQiLCJuYW1lIiwiY2FwaXRhbGl6ZWROYW1lIiwibmV3SWQiLCJtYXgiLCJ3IiwiaWQiLCJuZXdXb3JkIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/api.ts\n"));

/***/ })

});