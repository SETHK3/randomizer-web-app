"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/utils/api.ts":
/*!**************************!*\
  !*** ./app/utils/api.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addWord: function() { return /* binding */ addWord; },\n/* harmony export */   getRandomStudent: function() { return /* binding */ getRandomStudent; },\n/* harmony export */   getStudents: function() { return /* binding */ getStudents; }\n/* harmony export */ });\n// Frontend-only implementation using localStorage\n// Initial words data - will only be used if localStorage isn't available\nconst initialWords = [];\n// Helper function to get words from localStorage or initialize if not present\nfunction getWordsFromStorage() {\n    if (false) {}\n    // Always start with an empty array regardless of what's in localStorage\n    localStorage.setItem(\"wordBank\", JSON.stringify(initialWords));\n    return initialWords;\n}\n// Helper function to save words to localStorage\nfunction saveWordsToStorage(words) {\n    if (true) {\n        localStorage.setItem(\"wordBank\", JSON.stringify(words));\n    }\n}\n// Helper function to capitalize each word in a string\nfunction capitalizeWords(str) {\n    return str.split(\" \").map((word)=>word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(\" \");\n}\n// Get all words\nasync function getStudents() {\n    try {\n        const words = getWordsFromStorage();\n        return {\n            results: words\n        };\n    } catch (error) {\n        console.error(\"Error fetching words:\", error);\n        return {\n            results: initialWords\n        };\n    }\n}\n// Get a random word\nasync function getRandomStudent() {\n    try {\n        const words = getWordsFromStorage();\n        if (words.length === 0) {\n            return {\n                results: []\n            };\n        }\n        const randomIndex = Math.floor(Math.random() * words.length);\n        const randomWord = words[randomIndex];\n        return {\n            results: [\n                randomWord\n            ]\n        };\n    } catch (error) {\n        console.error(\"Error fetching random word:\", error);\n        return {\n            results: []\n        };\n    }\n}\n// Add a new word\nasync function addWord(name) {\n    try {\n        const words = getWordsFromStorage();\n        // Capitalize the input before saving\n        const capitalizedName = capitalizeWords(name);\n        // Create a new word with a unique ID\n        const newId = words.length > 0 ? Math.max(...words.map((w)=>w.id)) + 1 : 1;\n        const newWord = {\n            id: newId,\n            name: capitalizedName\n        };\n        // Add to list and save\n        words.push(newWord);\n        saveWordsToStorage(words);\n        return newWord;\n    } catch (error) {\n        console.error(\"Error adding word:\", error);\n        throw error;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsa0RBQWtEO0FBWWxELHlFQUF5RTtBQUN6RSxNQUFNQSxlQUF1QixFQUFFO0FBRS9CLDhFQUE4RTtBQUM5RSxTQUFTQztJQUNQLElBQUksS0FBNkIsRUFBRSxFQUVsQztJQUVELHdFQUF3RTtJQUN4RUMsYUFBYUMsT0FBTyxDQUFDLFlBQVlDLEtBQUtDLFNBQVMsQ0FBQ0w7SUFDaEQsT0FBT0E7QUFDVDtBQUVBLGdEQUFnRDtBQUNoRCxTQUFTTSxtQkFBbUJDLEtBQWE7SUFDdkMsSUFBSSxJQUE2QixFQUFFO1FBQ2pDTCxhQUFhQyxPQUFPLENBQUMsWUFBWUMsS0FBS0MsU0FBUyxDQUFDRTtJQUNsRDtBQUNGO0FBRUEsc0RBQXNEO0FBQ3RELFNBQVNDLGdCQUFnQkMsR0FBVztJQUNsQyxPQUFPQSxJQUNKQyxLQUFLLENBQUMsS0FDTkMsR0FBRyxDQUFDLENBQUNDLE9BQVNBLEtBQUtDLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtGLEtBQUtHLEtBQUssQ0FBQyxHQUFHQyxXQUFXLElBQ3RFQyxJQUFJLENBQUM7QUFDVjtBQUVBLGdCQUFnQjtBQUNULGVBQWVDO0lBQ3BCLElBQUk7UUFDRixNQUFNWCxRQUFRTjtRQUNkLE9BQU87WUFBRWtCLFNBQVNaO1FBQU07SUFDMUIsRUFBRSxPQUFPYSxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE9BQU87WUFBRUQsU0FBU25CO1FBQWE7SUFDakM7QUFDRjtBQUVBLG9CQUFvQjtBQUNiLGVBQWVzQjtJQUNwQixJQUFJO1FBQ0YsTUFBTWYsUUFBUU47UUFDZCxJQUFJTSxNQUFNZ0IsTUFBTSxLQUFLLEdBQUc7WUFDdEIsT0FBTztnQkFBRUosU0FBUyxFQUFFO1lBQUM7UUFDdkI7UUFFQSxNQUFNSyxjQUFjQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBS3BCLE1BQU1nQixNQUFNO1FBQzNELE1BQU1LLGFBQWFyQixLQUFLLENBQUNpQixZQUFZO1FBQ3JDLE9BQU87WUFBRUwsU0FBUztnQkFBQ1M7YUFBVztRQUFDO0lBQ2pDLEVBQUUsT0FBT1IsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsK0JBQStCQTtRQUM3QyxPQUFPO1lBQUVELFNBQVMsRUFBRTtRQUFDO0lBQ3ZCO0FBQ0Y7QUFFQSxpQkFBaUI7QUFDVixlQUFlVSxRQUFRQyxJQUFZO0lBQ3hDLElBQUk7UUFDRixNQUFNdkIsUUFBUU47UUFFZCxxQ0FBcUM7UUFDckMsTUFBTThCLGtCQUFrQnZCLGdCQUFnQnNCO1FBRXhDLHFDQUFxQztRQUNyQyxNQUFNRSxRQUNKekIsTUFBTWdCLE1BQU0sR0FBRyxJQUFJRSxLQUFLUSxHQUFHLElBQUkxQixNQUFNSSxHQUFHLENBQUMsQ0FBQ3VCLElBQU1BLEVBQUVDLEVBQUUsS0FBSyxJQUFJO1FBRS9ELE1BQU1DLFVBQVU7WUFBRUQsSUFBSUg7WUFBT0YsTUFBTUM7UUFBZ0I7UUFFbkQsdUJBQXVCO1FBQ3ZCeEIsTUFBTThCLElBQUksQ0FBQ0Q7UUFDWDlCLG1CQUFtQkM7UUFFbkIsT0FBTzZCO0lBQ1QsRUFBRSxPQUFPaEIsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsc0JBQXNCQTtRQUNwQyxNQUFNQTtJQUNSO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL3V0aWxzL2FwaS50cz81MTk1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEZyb250ZW5kLW9ubHkgaW1wbGVtZW50YXRpb24gdXNpbmcgbG9jYWxTdG9yYWdlXG5cbmV4cG9ydCBpbnRlcmZhY2UgV29yZCB7XG4gIGlkOiBudW1iZXI7XG4gIG5hbWU6IHN0cmluZztcbiAgc2VsZWN0ZWQ/OiBib29sZWFuO1xufVxuXG5pbnRlcmZhY2UgQXBpUmVzcG9uc2U8VD4ge1xuICByZXN1bHRzOiBUW107XG59XG5cbi8vIEluaXRpYWwgd29yZHMgZGF0YSAtIHdpbGwgb25seSBiZSB1c2VkIGlmIGxvY2FsU3RvcmFnZSBpc24ndCBhdmFpbGFibGVcbmNvbnN0IGluaXRpYWxXb3JkczogV29yZFtdID0gW107XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgd29yZHMgZnJvbSBsb2NhbFN0b3JhZ2Ugb3IgaW5pdGlhbGl6ZSBpZiBub3QgcHJlc2VudFxuZnVuY3Rpb24gZ2V0V29yZHNGcm9tU3RvcmFnZSgpOiBXb3JkW10ge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiBpbml0aWFsV29yZHM7IC8vIFJldHVybiBpbml0aWFsIGRhdGEgZHVyaW5nIFNTUlxuICB9XG5cbiAgLy8gQWx3YXlzIHN0YXJ0IHdpdGggYW4gZW1wdHkgYXJyYXkgcmVnYXJkbGVzcyBvZiB3aGF0J3MgaW4gbG9jYWxTdG9yYWdlXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwid29yZEJhbmtcIiwgSlNPTi5zdHJpbmdpZnkoaW5pdGlhbFdvcmRzKSk7XG4gIHJldHVybiBpbml0aWFsV29yZHM7XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBzYXZlIHdvcmRzIHRvIGxvY2FsU3RvcmFnZVxuZnVuY3Rpb24gc2F2ZVdvcmRzVG9TdG9yYWdlKHdvcmRzOiBXb3JkW10pOiB2b2lkIHtcbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIndvcmRCYW5rXCIsIEpTT04uc3RyaW5naWZ5KHdvcmRzKSk7XG4gIH1cbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGNhcGl0YWxpemUgZWFjaCB3b3JkIGluIGEgc3RyaW5nXG5mdW5jdGlvbiBjYXBpdGFsaXplV29yZHMoc3RyOiBzdHJpbmcpOiBzdHJpbmcge1xuICByZXR1cm4gc3RyXG4gICAgLnNwbGl0KFwiIFwiKVxuICAgIC5tYXAoKHdvcmQpID0+IHdvcmQuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB3b3JkLnNsaWNlKDEpLnRvTG93ZXJDYXNlKCkpXG4gICAgLmpvaW4oXCIgXCIpO1xufVxuXG4vLyBHZXQgYWxsIHdvcmRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3R1ZGVudHMoKTogUHJvbWlzZTxBcGlSZXNwb25zZTxXb3JkPj4ge1xuICB0cnkge1xuICAgIGNvbnN0IHdvcmRzID0gZ2V0V29yZHNGcm9tU3RvcmFnZSgpO1xuICAgIHJldHVybiB7IHJlc3VsdHM6IHdvcmRzIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGZldGNoaW5nIHdvcmRzOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIHsgcmVzdWx0czogaW5pdGlhbFdvcmRzIH07XG4gIH1cbn1cblxuLy8gR2V0IGEgcmFuZG9tIHdvcmRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSYW5kb21TdHVkZW50KCk6IFByb21pc2U8QXBpUmVzcG9uc2U8V29yZD4+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCB3b3JkcyA9IGdldFdvcmRzRnJvbVN0b3JhZ2UoKTtcbiAgICBpZiAod29yZHMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4geyByZXN1bHRzOiBbXSB9O1xuICAgIH1cblxuICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd29yZHMubGVuZ3RoKTtcbiAgICBjb25zdCByYW5kb21Xb3JkID0gd29yZHNbcmFuZG9tSW5kZXhdO1xuICAgIHJldHVybiB7IHJlc3VsdHM6IFtyYW5kb21Xb3JkXSB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyByYW5kb20gd29yZDpcIiwgZXJyb3IpO1xuICAgIHJldHVybiB7IHJlc3VsdHM6IFtdIH07XG4gIH1cbn1cblxuLy8gQWRkIGEgbmV3IHdvcmRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBhZGRXb3JkKG5hbWU6IHN0cmluZyk6IFByb21pc2U8V29yZD4ge1xuICB0cnkge1xuICAgIGNvbnN0IHdvcmRzID0gZ2V0V29yZHNGcm9tU3RvcmFnZSgpO1xuXG4gICAgLy8gQ2FwaXRhbGl6ZSB0aGUgaW5wdXQgYmVmb3JlIHNhdmluZ1xuICAgIGNvbnN0IGNhcGl0YWxpemVkTmFtZSA9IGNhcGl0YWxpemVXb3JkcyhuYW1lKTtcblxuICAgIC8vIENyZWF0ZSBhIG5ldyB3b3JkIHdpdGggYSB1bmlxdWUgSURcbiAgICBjb25zdCBuZXdJZCA9XG4gICAgICB3b3Jkcy5sZW5ndGggPiAwID8gTWF0aC5tYXgoLi4ud29yZHMubWFwKCh3KSA9PiB3LmlkKSkgKyAxIDogMTtcblxuICAgIGNvbnN0IG5ld1dvcmQgPSB7IGlkOiBuZXdJZCwgbmFtZTogY2FwaXRhbGl6ZWROYW1lIH07XG5cbiAgICAvLyBBZGQgdG8gbGlzdCBhbmQgc2F2ZVxuICAgIHdvcmRzLnB1c2gobmV3V29yZCk7XG4gICAgc2F2ZVdvcmRzVG9TdG9yYWdlKHdvcmRzKTtcblxuICAgIHJldHVybiBuZXdXb3JkO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBhZGRpbmcgd29yZDpcIiwgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG4iXSwibmFtZXMiOlsiaW5pdGlhbFdvcmRzIiwiZ2V0V29yZHNGcm9tU3RvcmFnZSIsImxvY2FsU3RvcmFnZSIsInNldEl0ZW0iLCJKU09OIiwic3RyaW5naWZ5Iiwic2F2ZVdvcmRzVG9TdG9yYWdlIiwid29yZHMiLCJjYXBpdGFsaXplV29yZHMiLCJzdHIiLCJzcGxpdCIsIm1hcCIsIndvcmQiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInNsaWNlIiwidG9Mb3dlckNhc2UiLCJqb2luIiwiZ2V0U3R1ZGVudHMiLCJyZXN1bHRzIiwiZXJyb3IiLCJjb25zb2xlIiwiZ2V0UmFuZG9tU3R1ZGVudCIsImxlbmd0aCIsInJhbmRvbUluZGV4IiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwicmFuZG9tV29yZCIsImFkZFdvcmQiLCJuYW1lIiwiY2FwaXRhbGl6ZWROYW1lIiwibmV3SWQiLCJtYXgiLCJ3IiwiaWQiLCJuZXdXb3JkIiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/api.ts\n"));

/***/ })

});